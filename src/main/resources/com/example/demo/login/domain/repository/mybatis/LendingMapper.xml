<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.login.domain.repository.mybatis.LendingMapper">

    <resultMap type="com.example.demo.login.domain.model.Lending" id="lending">
        <id column="lending_id" property="lendingId" />
        <id column="stock_id" property="stockId" />
        <id column="user_id" property="userId" />
        <result column="lending_date" property="lendingDate" />
    </resultMap>
    <resultMap type="com.example.demo.login.domain.model.LendingView" id="lendingView">
        <id column="lending_id" property="lendingId" />
        <id column="stock_id" property="stockId" />
        <result column="title" property="title" />
        <result column="user_name" property="userName" />
        <result column="state" property="state" />
        <result column="lending_date" property="lendingDate" />
    </resultMap>

    <select id="countAll" parameterType="int" resultType="int">
        SELECT
            COUNT(*)
        FROM
            m_lending
    </select>

    <select id="countUser" parameterType="int" resultType="int">
        SELECT
            COUNT(*)
        FROM
            m_lending,
            m_stock,
            m_book,
            m_user
        WHERE
            m_lending.stock_id = m_stock.stock_id AND
            m_stock.book_id = m_book.book_id AND
            m_lending.user_id = m_user.user_id AND
            m_user.user_id = #{userId}
    </select>

    <insert id="insertOne" useGeneratedKeys="true" keyProperty="lendingId" parameterType="com.example.demo.login.domain.model.Lending">
        INSERT INTO m_lending (
            stock_id,
            user_id,
            lending_date)
        VALUES (
            #{stockId},
            #{userId},
            #{lendingDate})
    </insert>

    <insert id="withIdInsertOne" parameterType="com.example.demo.login.domain.model.Lending">
        INSERT INTO m_lending (
            lending_id,
            stock_id,
            user_id,
            lending_date)
        VALUES (
            #{lendingId},
            #{stockId},
            #{userId},
            #{lendingDate})
    </insert>

    <select id="selectAll" resultMap="lending">
        SELECT
            *
        FROM
            m_lending
    </select>

    <select id="selectAllLendingView" resultMap="lendingView">
        SELECT
            lending_id,
            m_stock.stock_id,
            title,
            user_name,
            state,
            lending_date
        FROM
            m_lending,
            m_stock,
            m_book,
            m_user
        WHERE
            m_lending.stock_id = m_stock.stock_id AND
            m_stock.book_id = m_book.book_id AND
            m_lending.user_id = m_user.user_id
    </select>

    <select id="selectOne" parameterType="int" resultMap="lending">
        SELECT
            *
        FROM
            m_lending
        WHERE
            lending_id = #{lendingId}
    </select>

    <select id="selectUser" parameterType="int" resultMap="lendingView">
        SELECT
            lending_id,
            m_stock.stock_id,
            title,
            user_name,
            state,
            lending_date
        FROM
            m_lending,
            m_stock,
            m_book,
            m_user
        WHERE
            m_lending.stock_id = m_stock.stock_id AND
            m_stock.book_id = m_book.book_id AND
            m_lending.user_id = m_user.user_id AND
            m_user.user_id = #{userId}
    </select>

    <update id="updateOne" parameterType="com.example.demo.login.domain.model.Lending">
        UPDATE m_lending
        SET
            lending_id = #{lendingId},
            stock_id = #{stockId},
            user_id = #{userId},
            lending_date = #{lendingDate}
        WHERE
            lending_id = #{lendingId}
    </update>

    <delete id="deleteOne" parameterType="int">
        DELETE FROM m_lending WHERE lending_id = #{lendingId}
    </delete>

    <delete id="deleteAll" parameterType="string">
        DELETE FROM m_lending
    </delete>
</mapper>